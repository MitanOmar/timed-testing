name: Test Backend

on:
  push:
    branches: ["main", "beta"]
    paths:
      - 'backend/**'
  pull_request:
    branches: ["main", "beta"]
    paths:
      - 'backend/**'

env:
  backend-dir: ./backend

jobs:
  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.backend-dir }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: ${{ env.backend-dir }}
          key: poetry-${{ hashFiles('./backend/poetry.lock')}}
          restore-keys: |
            peotry-
      - name: Build the project
        working-directory: ${{ env.backend-dir }}
        run: |
          echo "ENV=dev" > .env
          docker compose up -d --build backend
      - name: Lint the code
        run: |
          docker compose exec -T backend black --check .
          docker compose exec -T backend flake8
          docker compose exec -T backend python manage.py makemigrations --check --dry-run --no-input
      - name: Run pytest
        run: docker compose exec -T backend pytest --no-cov-on-fail --cov --create-db -vv
